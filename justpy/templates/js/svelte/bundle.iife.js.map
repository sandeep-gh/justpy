{"version":3,"file":"bundle.iife.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Dummy.svelte","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../src/Chart.svelte","../src/Switch.svelte","../src/Htmlcomponents.svelte","../src/App.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.51.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n  export let props;\n  console.log(\"a dummy component\");\n</script>\n<span> I am such a dummy</span>\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<script>\n  export let jp_props;\n  import { onMount, beforeUpdate } from \"svelte\";\n  import { Chart, registerables } from 'chart.js';\n  Chart.register(...registerables);\n  let all_charts = {};\n   onMount(() => {\n     console.log(\"in Chart.onMount\");\n     console.log(\"props = \");\n     console.log(jp_props);\n\n     let canvasID = jp_props.canvas_id;\n     var ctx = document.getElementById(canvasID).getContext('2d');\n     console.log(\"ctx for chart\");\n     console.log(ctx)\n     console.log(\"----------------\")\n\n     // var chart = new Chart(ctx,\n     //                       {\n     //                         type: 'line',\n     //                         data: {\n     //                           labels: [1500,1600,1700,1750,1800,1850,1900,1950,1999,2050],\n     //                           datasets: [{ \n     //                             data: [86,114,106,106,107,111,133,221,783,2478],\n     //                             label: \"Africa\",\n     //                             borderColor: \"#3e95cd\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [282,350,411,502,635,809,947,1402,3700,5267],\n     //                             label: \"Asia\",\n     //                             borderColor: \"#8e5ea2\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [168,170,178,190,203,276,408,547,675,734],\n     //                             label: \"Europe\",\n     //                             borderColor: \"#3cba9f\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [40,20,10,16,24,38,74,167,508,784],\n     //                             label: \"Latin America\",\n     //                             borderColor: \"#e8c3b9\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [6,3,2,2,7,26,82,172,312,433],\n     //                             label: \"North America\",\n     //                             borderColor: \"#c45850\",\n     //                             fill: false\n     //                           }\n     //                                     ]\n     //                         },\n     //                         options: {\n     //                           title: {\n     //                             display: true,\n     //                             text: 'World population per region (in millions)'\n     //                           }\n     //                         }\n     //                       }\n     //                      );\n     \n     var chart = new Chart(ctx, {\n       type: jp_props.chart_type,\n       data: jp_props.chart_data,\n       options: jp_props.chart_options\n     });\n     all_charts[jp_props.chart_name] = chart;\n   }\n          );\n  beforeUpdate(()=>{\n    if (all_charts[jp_props.chart_name] == null){\n      \n    }\n    else{\n      console.log(\"destroy and recreate chart\");\n      all_charts[jp_props.chart_name].destroy();\n      let canvasID = jp_props.canvas_id;\n      let ctx = document.getElementById(canvasID).getContext('2d');\n      var chart = new Chart(ctx, {\n        type: jp_props.chart_type,\n        data: jp_props.chart_data,\n        options: jp_props.chart_options\n      });\n      all_charts[jp_props.chart_name] = chart;\n      \n    }\n    \n  });\n</script>\n\n<!-- unable to fix width and height for 0px -->\n<!-- <canvas id={canvasID} class={jp_props.classes} style={jp_props.style} width={jp_props.width} height={jp_props.height}/> -->\n\n<canvas id={jp_props.canvas_id} class={jp_props.classes} style={jp_props.style}/>\n\n\n\n\n","\n\n<style>\n  .switch {\n    @apply relative inline-block align-middle cursor-pointer select-none bg-transparent;\n  }\n\n  .track {\n    @apply w-12 h-6 bg-gray-600 rounded-full shadow-inner;\n  }\n\n  .thumb {\n    @apply transition-all duration-300 ease-in-out absolute top-0 left-0 w-6 h-6 bg-white border-2 border-gray-600 rounded-full;\n  }\n\n  input[type='checkbox']:checked ~ .thumb {\n    @apply transform translate-x-full border-green-500;\n  }\n\n  input[type='checkbox']:checked ~ .track {\n    @apply transform transition-colors bg-green-500;\n  }\n\n  input[type='checkbox']:disabled ~ .track {\n    @apply bg-gray-500;\n  }\n\n  input[type='checkbox']:disabled ~ .thumb {\n    @apply bg-gray-100 border-gray-500;\n  }\n\n  input[type='checkbox']:focus + .track,\n  input[type='checkbox']:active + .track {\n    @apply shadow-inner;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n\n  export let id = '';\n  export let text = '';\n  export let checked = false;\n  export let disabled = false;\n  onMount(() => {\n    console.log(\"in Switch.onMount\");\n    console.log(\"Switch svelte class is initiated with text\");\n    console.log(text);\n    console.log(\"---------\");\n  }\n         );\n\n  \n</script>\n\n<label for=\"{id}\">\n  <div class=\"switch\">\n    <input\n      {id}\n      name=\"{id}\"\n      type=\"checkbox\"\n      class=\"sr-only\"\n      {disabled}\n      bind:checked\n    />\n    <div class=\"track\"></div>\n    <div class=\"thumb\"></div>\n  </div>\n  <span class=\"ml-2 cursor-pointer\">{text}</span>\n</label>\n","<script>\n  export let jp_props;\n  export let props = {};\n  let self_closing_tags = ['hr', 'input', 'area', 'base', 'br', 'col', 'embed', 'img', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  import Dummy from \"./Dummy.svelte\";\n  import Chart from \"./Chart.svelte\";\n  import Switch from './Switch.svelte';\n  let components = {\n      'Dummy': Dummy,\n    'ChartJS': Chart,\n    'Switch': Switch,\n    'Dummy': Dummy\n    \n  };\n  //event_handler.js requires props\n  props['jp_props'] = jp_props;\n  \n  $:  description_object = {\n    style: jp_props.style,\n   \n  };\n  // console.log(\"jp_props for \" + jp_props.html_tag);\n  // console.log(jp_props);\n  $: if ('attrs' in jp_props){\n   for (const [key, value] of Object.entries(jp_props.attrs)) {\n     description_object[key] = value;\n     \n  }\n  }\n  console.log(\"------new htmlcomponent-----\");\n  console.log(jp_props.vue_type);\n  console.log(jp_props.classes);\n  console.log(\"-----------\");\n    \n\n  $: if (jp_props.classes) {\n     description_object['class'] = jp_props.classes\n  }\n\n  let is_self_closing = false;\n  if (self_closing_tags.indexOf(jp_props.html_tag) > -1){\n    is_self_closing = true;\n    // console.log(jp_props.html_tag);\n    // console.log(\"is self closing\");\n  }\n      \n  function dummyEventHandle(event){\n    // console.log(\"from dummyEventHandle\");\n  }\n  function clickEventHandle(event) {\n    // console.log(\"in click eh\");\n    eventHandler(props, event, false);\n  }\n  function inputEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  function changeEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  //for events defined in python -- forward them to eventhandler\n  //else use dummyeventhandler\n  let click_eh = dummyEventHandle;\n  let change_eh = dummyEventHandle;\n  let input_eh = dummyEventHandle;  \n\n  for (let i = 0; i < jp_props.events.length; i++) {\n    switch(jp_props.events[i]) {\n    case \"before\":\n      console.log(\"before event not implemented\");\n      break;\n    case \"input\":\n      input_eh = inputEventHandle;\n      break;\n    case \"change\":\n      change_eh = changeEventHandle;\n      break;\n    case \"click\":\n      click_eh = clickEventHandle;\n    }\n    \n  }\n</script>\n\n{#if jp_props.vue_type === \"html_component\"}\n  <!-- svelte's syntax for input differs from other html components -->\n{#if is_self_closing}\n  <!-- <input  {...description_object} on:input={input_eh} on:change={change_eh}> -->\n<svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}></svelte:element>\n{:else}\n  <svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}>\n    {#if jp_props.text}\n      {jp_props.text}\n    {/if}\n    \n    {#each jp_props.object_props as cobj_props}\n      {#if cobj_props.show}\n        <svelte:self jp_props={cobj_props}/>\n      {/if}\n    {/each}\n\n      </svelte:element>\n    {/if}\n\n{:else}\n  <!-- if component is not a html component; svelte syntax differs for html vs svelte component  -->\n  <svelte:component this={components[jp_props.vue_type]}  {...description_object} jp_props={jp_props}/>\n{/if}\n","<script>\n  export let name;\n  export let justpyComponents;\n\n  var btncolor = \"bg-green-200/50\";\n  function on_click(event){\n    console.log(\"on click called\");\n    btncolor = \"bg-pink-200/50\";\n  }\n\n  import Htmlcomponent from './Htmlcomponents.svelte';\n  import Dummy from \"./Dummy.svelte\";\n  import Chart from \"./Chart.svelte\";\n  import Switch from './Switch.svelte';\n\n\n\n  \n//   let uno = false;\n//   let dummy_props = {};\n  let selected_component = Htmlcomponent;\n  let components = {'html_component': Htmlcomponent,\n                     'Dummy': Dummy,\n                     'ChartJS': Chart,\n                     'Switch': Switch\n                    \n                    };\n//   console.log(\"the justpyComponents\");\n//   console.log(JSON.stringify(justpyComponents));\n</script>\n  \n{#each justpyComponents as jpcomp}\n  {#if jpcomp.vue_type === \"html_component\"}\n    <svelte:component this={Htmlcomponent} jp_props={jpcomp}/>\n  {:else}\n    <svelte:component this={components[jpcomp.vue_type]} jp_props={jpcomp} />\n  {/if}\n  \n  \n{/each}\n\n\n\n"],"names":["tar","src","k","fn","Object","create","fns","forEach","run","thing","a","b","current_component","is_hydrating","low","high","key","value","mid","target","node","hydrate_init","children2","childNodes","nodeName","myChildren","i","length","claim_order","push","m","Int32Array","p","longest","current","seqLen","upper_bound","idx","newLen","Math","max","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","actual_end_child","parentNode","firstChild","nextSibling","appendChild","removeChild","iterations","detaching","d","name","document","createElement","data","createTextNode","text","event","handler","options","addEventListener","removeEventListener","attribute","removeAttribute","getAttribute","setAttribute","attributes","descriptors2","getOwnPropertyDescriptors","__proto__","style","cssText","set","data_map","keys","prop","element2","Array","from","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","resultNode","replacement","splice","create_element","claim_node","remove","v","claim_element_base","element","nodeType","dataStr","startsWith","splitText","claim_text","text2","wholeText","component","props","Error","$$","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","seen_callbacks","Set","flushidx","saved_component","pop","callback2","has","add","clear","fragment","update","before_update","dirty","ctx","after_update","add_render_callback","outroing","outros","r","c","block","local","delete","detach2","o","levels","updates","update2","to_null_out","accounted_for","$$scope","n","parent_nodes","l","customElement","new_on_destroy","map","filter","is_function","on_destroy","then","flush","fill","instance2","create_fragment2","not_equal","append_styles","parent_component","noop","bound","blank_object","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","children","detach","intro","[object Object]","this","$destroy","type","index2","indexOf","$$props","obj","$$set","log","requestAnimFrame","window","requestAnimationFrame","thisArg","updateFn","updateArgs","args2","prototype","slice","call","ticking","args","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isArray","toString","isNumberFinite","Number","isFinite","defaultValue","toDimension","dimension","endsWith","parseFloat","loopable","len","isObject","a0","a1","ilen","v0","v1","datasetIndex","index","source","clone$1","klen","isValidKey","tval","sval","sources","merger","_merger","merge","_mergerIf","hasOwnProperty","pos","indexOfDotOrLength","str","charAt","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNaN","x","y","epsilon","abs","array","property","min","degrees","radians","e","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","pt1","pt2","sameAngleIsFullCircle","_normalizeAngle","s","angleToStart","angleToEnd","startToAngle","endToAngle","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","lim","h","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","alpha","HUE_RE","w","rgb","hsl2rgbn","hueValue","n2b","calln","exec","p2b","hue","p1","p2","hwb2rgbn","hwb2rgb","hsv2rgbn","hsv2rgb","hsl2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","unpacked","tkeys","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","ratio","tmp","rgb2hsl","proto","assign","input","clone","rgbParse","hueParse","Color","fromObject","nameParse","functionParse","_rgb","_valid","b2n","hexString","n2p","hslString","color2","weight","c1","c2","w2","w1","rgb1","rgb2","interpolate","val","deg","isPatternOrGradient","index_esm","saturate","darken","overrides","descriptors","split","scope","values","getScope$1","defaults","_descriptors2","animation","backgroundColor","borderColor","color","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","valueOrDefault","_scriptable","_indexable","_fallback","gc","string","textWidth","measureText","width","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","_measureText","restore","gcLen","pixel","currentDevicePixelRatio","halfWidth","canvas","getContext","resetTransform","clearRect","height","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","point","area","margin","left","right","top","bottom","clip","previous","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","opts","lines","strokeWidth","strokeColor","line","translation","isNullOrUndef","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","matches","match","objProps","read","_readValueToProps","toTRBL","fallback","warn","toLineHeight","toFontString","inputs","info","cacheable","parentContext","table","cmp","hi","lo","_lookupByKey","_lookup","_rlookupByKey","arrayEvents","listener","stub","_chartjs","listeners","items","set2","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","_createResolver","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","_descriptors","setContext","_attachContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","defaults2","scriptable","indexable","_allKeys","_capitalize","constructor","resolve2","getScope","parent","resolveObjectKey","parentScopes","parentFallback","resolveFallback","allScopes","addScopesFromKey","subGetTarget","addScopes","resolveKeysFromAllScopes","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","firstPoint","middlePoint","afterPoint","next","d01","distanceBetweenPoints","d12","s01","s12","fa","fb","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","delta","iPixel","vPixel","pt","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","splineCurve","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isPointInArea","capControlPoint","domNode","host","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","styles","suffix","result","evt","borderBox","boxSizing","paddings","getPositionedStyle","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","aspectRatio","margins","parseMaxStyle","maxHeight","containerSize","container","_getParentNode","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","el","getPropertyValue","getStyle","cp1","cp2","_pointInLine","intlCache","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","between","_angleBetween","compare","_angleDiff","normalize","_isBetween","segment","bounds","startBound","endBound","propertyFn","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","normalizeSegment","segments","sub","_boundSegment","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","st","dir","createContext","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","anims","date","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw2","_active","_total","tick","draw","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","_duration","cancel","interpolators","boolean","from2","to2","factor","c0","valid","mix","number","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","_animateOptions","Animation","allowedOverflow","filterVisible","metasets","_getSortedDatasetMetas","stack","dsIndex","singleMode","otherValue","stacked","stacks","stackKey","indexValue","subStack","vScale","positive","getMatchingVisibleMetas","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","getOrCreateStack","_top","getLastIndexInStack","_bottom","scales2","shift","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","isStacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","getFirstScaleId","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","applyStack","getSortedDatasetIndices","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","scaleClip","defaultClip","getMaxOverflow","elements2","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names2","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","Animations","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","_cache","$bar","visibleMetas","concat","getAllParsedValues","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","custom","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","inflateAmount","DatasetController","parseArrayOrPrimitive","iAxisKey","vAxisKey","isFloatBar","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","_getStacks","pixels","barThickness","computeMinSampleSize","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","super","tooltip","title","innerRadius","outerRadius","getter","i2","toRadians","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","formatNumber","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","animationsDisabled","pointCount","_limitValue","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","isNumber","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","DoughnutController","_fullLoop","pointPosition","getPointPositionForValue","LineController","controllers","BarController","BubbleController","PolarAreaController","PieController","RadarController","ScatterController","abstract","timestamp","amount","unit","weekday","members","DateAdapter","adapters","_date","metaset","lookupMethod","_reversePixels","getRange","position","getSortedVisibleDatasetMetas","binarySearch","useFinalPosition","isPointInArea","inRange","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","inRange2","getCenterPoint","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","rangeMethod","intersectsItem","Interaction","evaluateInteractionItems","modes","getRelativePosition","getIntersectItems","getNearestItems","getAxisItems","STATIC_POSITIONS","layouts2","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","maxPadding","boxPadding","getPadding","newWidth","outerWidth","getCombinedMax","newHeight","outerHeight","widthChanged","heightChanged","same","other","positions2","marginForPositions","boxes","refitBoxes","refit","getMargins","updateDims","fitBoxes","userPadding","padding","autoPadding","layouts","_layers","z","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","sortByWeight","filterByPosition","centerHorizontal","filterDynamicPositionByAxis","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","setLayoutDims","change","updatePos","BasePlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","nodeList","contains","observer","MutationObserver","trigger","entries","nodeListContains","addedNodes","removedNodes","observe","childList","subtree","drpListeningCharts","oldDevicePixelRatio","dpr","throttled","ResizeObserver","contentRect","onWindowResize","disconnect","native","fromNativeEvent","renderHeight","renderWidth","displayWidth","readUsedSize","displayHeight","proxies","$proxies","attach","createAttachObserver","createDetachObserver","createResizeObserver","createProxyAndListen","releaseObserver","removeListener","getMaximumSize","isConnected","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","numItems","increment","offsetGridLines","validIndex2","lineValue","toFont","reverseAlign","Element","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","finiteOrDefault","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","sample","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","getTickMarkLength","getTitleHeight","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","_alignPixel","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","getPixelForGridLine","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","titleAlign","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","Scale","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","registry","TypedRegistry","_typedRegistries","_each","_get","typedRegistry","reg","_getRegistryForType","arg","isForType","_exec","itemReg","registry2","camelMethod","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","plugins2","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","datasetDefaults","scaleOptions","chartDefaults","configScales","chartIndexAxis","getIndexAxis","firstIDs","scaleConf","console","error","determineAxis","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","getAxisFromDefaultScaleID","defaultID","mergeScaleConfig","keyCache","keysCached","generate","addIfFound","_config","initData","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","cachedKeys","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","l1","l2","animationOptions2","onComplete","onProgress","_isDomSupported","getElementById","instances","getChart","getCanvas","intKey","userConfig","Config","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","BasicPlatform","DomPlatform","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","PluginService","_hiddenIndices","attached","_doResize","timeout","setTimeout","debounce","resizeDelay","listen","onAnimationsComplete","onAnimationProgress","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","retinaScale","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","positionIsHorizontal","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","compare2Level","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener2","_remove","detached","isAttached","activeElements","lastActive","_elementsEqual","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","each","Chart","pixelMargin","angleMargin","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","theta","innerR","spacingOffset","alpha2","avNogSpacingRadius","angleOffset","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","rThetaToXY","p4","p8","inner","lineJoin","fullCircles","version","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","lineCap","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathVars","lineMethod","stepped","_steppedLineTo","_bezierCurveTo","getLineMethod","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","fastPathSegment","pathSegment","usePath2D","Path2D","path","_path","segmentMethod","_getSegmentMethod","_points","_segments","_pointsUpdated","findStartAndEnd","splitByStyles","solidSegments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_getInterpolationMethod","interpolated","hitRadius","mouseX","mouseY","inRange$1","hoverRadius","bar","half","skip2","getBarBounds","maxW","maxH","skipOrLimit","parseBorderWidth","toTRBLCorners","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","refRect","boundingRects","addRectPath","addRoundedRectPath","addNormalRectPath","inflateRect","ArcElement","LineElement","PointElement","BarElement","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","__spreadProps","minMaxDecimation","boundary","linePoints","_findSegmentEnd","_pointsFromSegments","propagate","fill2","visited","fillOption","parseFillOption","firstCh","decodeTargetIndex","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","_createBoundaryLine","_buildStackLine","_getTargetValue","simpleArc","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipY","lineLoop","tpoints","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","notShape","targetLoop","interpolatedPoint","_args","_decodeFill","$filler","_resolveTarget","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","getRtlAdapter","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","Legend","adjustHitBoxes","handleEvent","ci","_padding","textSize","fontOpts","_drawArgs","plugin_title","Title","titleBlock","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","toPush","String","getLabelAndValue","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineYAlign","determineXAlign","alignment","paddingAndSize","alignX","alignY","pushOrConcat","splitNewlines","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","getBeforeAfterBodyLines","bodyItems","scoped","overrideCallbacks","beforeLabel","afterLabel","beforeFooter","afterFooter","createTooltipItem","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","getTooltipSize","positionAndSize","determineAlignment","backgroundPoint","getBackgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","getAlignedX","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","Tooltip","_willRender","labelCount","Decimation","Filler","SubTitle","addedLabels","addIfString","lastIndexOf","_startValue","_valueRange","_addedLabels","added","validIndex","findOrAddLabel","getDecimalForPixel","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","niceNum","rounded","almostWhole","decimalPlaces","_decimalPlaces","relativeLabelSize","CategoryScale","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","generateTicks$1","_maxDigits","LinearScaleBase","handleTickRangeOptions","tickVal","_zero","exp","endExp","endSignificand","significand","isMajor","lastTick","generateTicks","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","determineLimits","setCenterPoint","_pointLabelItems","extra","getTickBackdropHeight","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","gridLineOpts","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","adapter","_adapter","parser","isoWeekday","_parseOpts","round2","startOf","minUnit","capacity","interval","time","timestamps","majorUnit","map2","setMajorTicks","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","determineUnitForAutoTicks","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","ticksFromTimestamps","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","sorter","prevSource","nextSource","prevTarget","nextTarget","span","TimeScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","LinearScale","LogarithmicScale","RadialLinearScale","TimeSeriesScale","canvas_id","classes","ctx2","jp_props","all_charts","canvasID","chart_type","chart_data","chart_options","chart_name","destroy","checked","vue_type","spread_props","html_tag","object_props","components","Dummy","ChartJS","Switch","is_self_closing","click_eh","dummyEventHandle","change_eh","changeEventHandle","clickEventHandle","description_object","attrs","Htmlcomponent","justpyComponents","html_component"],"mappings":"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"}