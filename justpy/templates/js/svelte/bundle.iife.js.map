{"version":3,"file":"bundle.iife.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Dummy.svelte","../src/Htmlcomponents.svelte","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../src/Chart.svelte","../src/App.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n  export let props;\n  console.log(\"a dummy component\");\n</script>\n<span> I am such a dummy</span>\n","<script>\n  export let jp_props;\n  export let props = {};\n  let self_closing_tags = ['hr', 'input', 'area', 'base', 'br', 'col', 'embed', 'img', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  import Dummy from \"./Dummy.svelte\";\n  // import Chart from \"./Chart.svelte\";\n  let components = {\n                    'Dummy': Dummy,\n                    // 'ChartJS': Chart\n                   };\n  //event_handler.js requires props\n  props['jp_props'] = jp_props;\n  \n  $:  description_object = {\n    style: jp_props.style,\n   \n  };\n  console.log(\"jp_props for \" + jp_props.html_tag);\n  console.log(jp_props);\n  $: if ('attrs' in jp_props){\n   for (const [key, value] of Object.entries(jp_props.attrs)) {\n    description_object[key] = value;\n  }\n  }\n  \n  $: if (jp_props.classes) {\n     description_object['class'] = jp_props.classes\n  }\n\n  let is_self_closing = false;\n  if (self_closing_tags.indexOf(jp_props.html_tag) > -1){\n    is_self_closing = true;\n    console.log(jp_props.html_tag);\n    console.log(\"is self closing\");\n  }\n      \n  function dummyEventHandle(event){\n    console.log(\"from dummyEventHandle\");\n  }\n  function clickEventHandle(event) {\n    console.log(\"in click eh\");\n    eventHandler(props, event, false);\n  }\n  function inputEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  function changeEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  //for events defined in python -- forward them to eventhandler\n  //else use dummyeventhandler\n  let click_eh = dummyEventHandle;\n  let change_eh = dummyEventHandle;\n  let input_eh = dummyEventHandle;  \n\n  for (let i = 0; i < jp_props.events.length; i++) {\n    switch(jp_props.events[i]) {\n    case \"before\":\n      console.log(\"before event not implemented\");\n      break;\n    case \"input\":\n      input_eh = inputEventHandle;\n      break;\n    case \"change\":\n      change_eh = changeEventHandle;\n      break;\n    case \"click\":\n      click_eh = clickEventHandle;\n    }\n    \n  }\n</script>\n\n{#if jp_props.vue_type === \"html_component\"}\n  <!-- svelte's syntax for input differs from other html components -->\n{#if is_self_closing}\n  <!-- <input  {...description_object} on:input={input_eh} on:change={change_eh}> -->\n<svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}></svelte:element>\n{:else}\n  <svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}>\n    {#if jp_props.text}\n      {jp_props.text}\n    {/if}\n    \n    {#each jp_props.object_props as cobj_props}\n      {#if cobj_props.show}\n        <svelte:self jp_props={cobj_props}/>\n      {/if}\n    {/each}\n\n      </svelte:element>\n    {/if}\n\n{:else}\n  <!-- if component is not a html component; svelte syntax differs for html vs svelte component  -->\n  <svelte:component this={components[jp_props.vue_type]}  jp_props={jp_props}/>\n{/if}\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<script>\n  import { onMount, beforeUpdate } from \"svelte\";\n  import { Chart, registerables } from 'chart.js';\n  Chart.register(...registerables);\n  export let jp_props;\n  \n  let canvasID = \"canvas_\" + jp_props.chart_name;\n  let all_charts = {};\n  onMount(() => {\n    console.log(\"in Chart.onMount\");\n    let canvasID = \"canvas_\" + jp_props.chart_name;\n    var ctx = document.getElementById(canvasID).getContext('2d');\n    var chart = new Chart(ctx, {\n      type: jp_props.chart_type,\n      data: jp_props.chart_data,\n      options: jp_props.chart_options\n    });\n    all_charts[jp_props.chart_name] = chart;\n  }\n  );\n  beforeUpdate(()=>{\n    if (all_charts[jp_props.chart_name] == null){\n      \n    }\n    else{\n      console.log(\"destroy and recreate chart\");\n      all_charts[jp_props.chart_name].destroy();\n      let canvasID = \"canvas_\" + jp_props.chart_name;\n      let ctx = document.getElementById(canvasID).getContext('2d');\n      var chart = new Chart(ctx, {\n        type: jp_props.chart_type,\n        data: jp_props.chart_data,\n        options: jp_props.chart_options\n      });\n      all_charts[jp_props.chart_name] = chart;\n      \n    }\n    \n  });\n</script>\n\n<!-- unable to fix width and height for 0px -->\n<!-- <canvas id={canvasID} class={jp_props.classes} style={jp_props.style} width={jp_props.width} height={jp_props.height}/> -->\n\n<canvas id={canvasID} class={jp_props.classes} style={jp_props.style}/>\n\n\n\n\n","<script>\n  export let name;\n\n\n  var btncolor = \"bg-green-200/50\";\n  function on_click(event){\n    console.log(\"on click called\");\n    btncolor = \"bg-pink-200/50\";\n  }\n\n  import Htmlcomponent from './Htmlcomponents.svelte';\n  import Dummy from \"./Dummy.svelte\";\n  import Chart from \"./Chart.svelte\";\n  export let justpyComponents;\n  let dummy_props = {};\n  let selected_component = Htmlcomponent;\n  let components = {'html_component': Htmlcomponent,\n                    'Dummy': Dummy,\n                    'ChartJS': Chart\n                   };\n</script>\n\n<!-- <main class=\"text-center py-12 max-w-xs mx-auto sm:max-w-none\"> -->\n<!--   <h1 class=\"text-red-400 text-6xl uppercase leading-loose font-thin\">Hello {name}!</h1> -->\n<!--   <p class=\"text-stone-700 mt-4\"> -->\n<!--     Visit the <a class=\"text-sky-600 hover:underline\" href=\"https://svelte.dev/tutorial\"> -->\n<!--     Svelte tutorial</a> to learn how to build Svelte apps. -->\n<!--   </p> -->\n<!--   <button class={btncolor} on:click={on_click}> -->\n<!--     clickme -->\n<!--     </button> -->\n<!-- </main> -->\n{#each justpyComponents as jpcomp}\n  {#if jpcomp.vue_type === \"html_component\"}\n    <svelte:component this={Htmlcomponent} jp_props={jpcomp}/>\n  {:else}\n    <svelte:component this={components[jpcomp.vue_type]} jp_props={jpcomp} />\n  {/if}\n  \n  \n{/each}\n\n\n<style lang=\"postcss\" global>\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n  @tailwind typography;\n</style>\n"],"names":["tar","src","k","fn","Object","create","fns","forEach","run","thing","a","b","current_component","is_hydrating","low","high","key","value","mid","target","style_sheet_id","styles","append_styles_to","node","document","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","appendChild","head","hydrate_init","children2","childNodes","nodeName","myChildren","i","length","claim_order","push","m","Int32Array","p","longest","current","seqLen","upper_bound","idx","newLen","Math","max","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","actual_end_child","parentElement","firstChild","nextSibling","parentNode","removeChild","iterations","detaching","d","name","createElement","data","createTextNode","text","event","handler","options","addEventListener","removeEventListener","attribute","removeAttribute","getAttribute","setAttribute","attributes","descriptors2","getOwnPropertyDescriptors","__proto__","cssText","set","element2","Array","from","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","resultNode","replacement","splice","create_element","claim_node","remove","v","claim_element_base","nodeType","dataStr","startsWith","splitText","component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","seen_callbacks","Set","flushidx","saved_component","$$","pop","callback2","has","add","clear","fragment","update","before_update","dirty","ctx","after_update","add_render_callback","outroing","outros","r","c","block","local","delete","detach2","o","levels","updates","update2","to_null_out","accounted_for","$$scope","n","parent_nodes","l","customElement","on_mount","on_destroy","new_on_destroy","map","filter","is_function","then","flush","fill","instance2","create_fragment2","not_equal","props","append_styles2","parent_component","noop","bound","blank_object","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","children","detach","intro","[object Object]","this","$destroy","type","index2","indexOf","$$props","obj","$$set","keys","log","vue_type","ctx2","html_tag","text2","wholeText","show","object_props","claim_text","jp_props","components","Dummy","is_self_closing","click_eh","dummyEventHandle","change_eh","events","changeEventHandle","clickEventHandle","description_object","entries","attrs","classes","requestAnimFrame","window","requestAnimationFrame","thisArg","updateFn","updateArgs","args2","prototype","slice","call","ticking","args","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","isArray","toString","isNumberFinite","Number","isFinite","defaultValue","toDimension","dimension","endsWith","parseFloat","loopable","len","isObject","a0","a1","ilen","v0","v1","datasetIndex","index","source","clone$1","klen","isValidKey","tval","sval","sources","merger","_merger","merge","_mergerIf","hasOwnProperty","pos","indexOfDotOrLength","str","charAt","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNaN","x","y","epsilon","abs","array","property","min","degrees","radians","e","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","pt1","pt2","sameAngleIsFullCircle","_normalizeAngle","s","angleToStart","angleToEnd","startToAngle","endToAngle","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","lim","h","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","alpha","HUE_RE","w","rgb","hsl2rgbn","hueValue","n2b","calln","exec","p2b","hue","p1","p2","hwb2rgbn","hwb2rgb","hsv2rgbn","hsv2rgb","hsl2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","unpacked","tkeys","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","ratio","tmp","rgb2hsl","proto","assign","input","clone","rgbParse","hueParse","Color","fromObject","nameParse","functionParse","_rgb","_valid","b2n","hexString","n2p","hslString","color2","weight","c1","c2","w2","w1","rgb1","rgb2","interpolate","val","deg","isPatternOrGradient","index_esm","saturate","darken","overrides","descriptors","split","scope","values","getScope$1","defaults","_descriptors2","animation","backgroundColor","borderColor","color","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","font","family","lineHeight","hover","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","valueOrDefault","_scriptable","_indexable","_fallback","gc","string","textWidth","measureText","width","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","_measureText","restore","gcLen","pixel","currentDevicePixelRatio","halfWidth","canvas","getContext","resetTransform","clearRect","height","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","point","area","margin","left","right","top","bottom","clip","previous","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","opts","lines","strokeWidth","strokeColor","line","translation","isNullOrUndef","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","matches","match","objProps","read","prop","_readValueToProps","toTRBL","fallback","warn","toLineHeight","toFontString","inputs","info","cacheable","parentContext","table","cmp","hi","lo","_lookupByKey","_lookup","_rlookupByKey","arrayEvents","listener","stub","_chartjs","listeners","items","set2","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","_createResolver","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","_descriptors","setContext","_attachContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","defaults2","scriptable","indexable","_allKeys","_capitalize","constructor","resolve2","getScope","parent","resolveObjectKey","parentScopes","parentFallback","resolveFallback","allScopes","addScopesFromKey","subGetTarget","addScopes","resolveKeysFromAllScopes","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","firstPoint","middlePoint","afterPoint","next","d01","distanceBetweenPoints","d12","s01","s12","fa","fb","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","delta","iPixel","vPixel","pt","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","splineCurve","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isPointInArea","capControlPoint","domNode","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","suffix","result","evt","borderBox","boxSizing","paddings","getPositionedStyle","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","aspectRatio","margins","parseMaxStyle","maxHeight","containerSize","container","_getParentNode","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","el","getPropertyValue","getStyle","cp1","cp2","_pointInLine","intlCache","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","between","_angleBetween","compare","_angleDiff","normalize","_isBetween","segment","bounds","startBound","endBound","propertyFn","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","normalizeSegment","segments","sub","_boundSegment","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","st","dir","createContext","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","anims","date","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw2","_active","_total","tick","draw","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","_duration","cancel","interpolators","boolean","from2","to2","factor","c0","valid","mix","number","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","_animateOptions","Animation","allowedOverflow","filterVisible","metasets","_getSortedDatasetMetas","stack","dsIndex","singleMode","otherValue","stacked","stacks","stackKey","indexValue","subStack","vScale","positive","getMatchingVisibleMetas","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","getOrCreateStack","_top","getLastIndexInStack","_bottom","scales2","shift","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","isStacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","getFirstScaleId","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","applyStack","getSortedDatasetIndices","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","scaleClip","defaultClip","getMaxOverflow","elements2","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names2","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","Animations","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","_cache","$bar","visibleMetas","concat","getAllParsedValues","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","custom","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","inflateAmount","DatasetController","parseArrayOrPrimitive","iAxisKey","vAxisKey","isFloatBar","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","_getStacks","pixels","barThickness","computeMinSampleSize","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","super","tooltip","title","innerRadius","outerRadius","getter","i2","toRadians","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","formatNumber","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","animationsDisabled","pointCount","_limitValue","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","isNumber","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","DoughnutController","_fullLoop","pointPosition","getPointPositionForValue","LineController","controllers","BarController","BubbleController","PolarAreaController","PieController","RadarController","ScatterController","abstract","timestamp","amount","unit","weekday","members","DateAdapter","adapters","_date","metaset","lookupMethod","_reversePixels","getRange","position","getSortedVisibleDatasetMetas","binarySearch","useFinalPosition","isPointInArea","inRange","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","inRange2","getCenterPoint","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","rangeMethod","intersectsItem","Interaction","evaluateInteractionItems","modes","getRelativePosition","getIntersectItems","getNearestItems","getAxisItems","STATIC_POSITIONS","layouts2","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","maxPadding","boxPadding","getPadding","newWidth","outerWidth","getCombinedMax","newHeight","outerHeight","widthChanged","heightChanged","same","other","positions2","marginForPositions","boxes","refitBoxes","refit","getMargins","updateDims","fitBoxes","userPadding","padding","autoPadding","layouts","_layers","z","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","sortByWeight","filterByPosition","centerHorizontal","filterDynamicPositionByAxis","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","setLayoutDims","change","updatePos","BasePlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","nodeList","contains","observer","MutationObserver","trigger","nodeListContains","addedNodes","removedNodes","observe","childList","subtree","drpListeningCharts","oldDevicePixelRatio","dpr","throttled","ResizeObserver","contentRect","onWindowResize","disconnect","native","fromNativeEvent","renderHeight","renderWidth","displayWidth","readUsedSize","displayHeight","proxies","$proxies","attach","createAttachObserver","createDetachObserver","createResizeObserver","createProxyAndListen","releaseObserver","removeListener","getMaximumSize","isConnected","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","numItems","increment","offsetGridLines","validIndex2","lineValue","toFont","reverseAlign","Element","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","finiteOrDefault","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","sample","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","getTickMarkLength","getTitleHeight","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","_alignPixel","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","getPixelForGridLine","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","titleAlign","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","Scale","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","registry","TypedRegistry","_typedRegistries","_each","_get","typedRegistry","reg","_getRegistryForType","arg","isForType","_exec","itemReg","registry2","camelMethod","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","plugins2","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","datasetDefaults","scaleOptions","chartDefaults","configScales","chartIndexAxis","getIndexAxis","firstIDs","scaleConf","console","error","determineAxis","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","getAxisFromDefaultScaleID","defaultID","mergeScaleConfig","keyCache","keysCached","generate","addIfFound","_config","initData","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","cachedKeys","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","l1","l2","animationOptions2","onComplete","onProgress","_isDomSupported","instances","getChart","getCanvas","intKey","userConfig","Config","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","BasicPlatform","DomPlatform","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","PluginService","_hiddenIndices","attached","_doResize","timeout","setTimeout","debounce","resizeDelay","listen","onAnimationsComplete","onAnimationProgress","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","retinaScale","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","positionIsHorizontal","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","compare2Level","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener2","_remove","detached","isAttached","activeElements","lastActive","_elementsEqual","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","each","Chart","pixelMargin","angleMargin","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","theta","innerR","spacingOffset","alpha2","avNogSpacingRadius","angleOffset","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","rThetaToXY","p4","p8","inner","lineJoin","fullCircles","version","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","lineCap","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathVars","lineMethod","stepped","_steppedLineTo","_bezierCurveTo","getLineMethod","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","fastPathSegment","pathSegment","usePath2D","Path2D","path","_path","segmentMethod","_getSegmentMethod","_points","_segments","_pointsUpdated","findStartAndEnd","splitByStyles","solidSegments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_getInterpolationMethod","interpolated","hitRadius","mouseX","mouseY","inRange$1","hoverRadius","bar","half","skip2","getBarBounds","maxW","maxH","skipOrLimit","parseBorderWidth","toTRBLCorners","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","refRect","boundingRects","addRectPath","addRoundedRectPath","addNormalRectPath","inflateRect","ArcElement","LineElement","PointElement","BarElement","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","__spreadProps","minMaxDecimation","boundary","linePoints","_findSegmentEnd","_pointsFromSegments","propagate","fill2","visited","fillOption","parseFillOption","firstCh","decodeTargetIndex","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","_createBoundaryLine","_buildStackLine","_getTargetValue","simpleArc","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipY","lineLoop","tpoints","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","notShape","targetLoop","interpolatedPoint","_args","_decodeFill","$filler","_resolveTarget","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","getRtlAdapter","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","Legend","adjustHitBoxes","handleEvent","ci","_padding","textSize","fontOpts","_drawArgs","plugin_title","Title","titleBlock","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","toPush","String","getLabelAndValue","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineYAlign","determineXAlign","alignment","paddingAndSize","alignX","alignY","pushOrConcat","splitNewlines","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","getBeforeAfterBodyLines","bodyItems","scoped","overrideCallbacks","beforeLabel","afterLabel","beforeFooter","afterFooter","createTooltipItem","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","getTooltipSize","positionAndSize","determineAlignment","backgroundPoint","getBackgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","getAlignedX","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","Tooltip","_willRender","labelCount","Decimation","Filler","SubTitle","addedLabels","addIfString","lastIndexOf","_startValue","_valueRange","_addedLabels","added","validIndex","findOrAddLabel","getDecimalForPixel","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","niceNum","rounded","almostWhole","decimalPlaces","_decimalPlaces","relativeLabelSize","CategoryScale","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","generateTicks$1","_maxDigits","LinearScaleBase","handleTickRangeOptions","tickVal","_zero","exp","endExp","endSignificand","significand","isMajor","lastTick","generateTicks","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","determineLimits","setCenterPoint","_pointLabelItems","extra","getTickBackdropHeight","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","gridLineOpts","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","adapter","_adapter","parser","isoWeekday","_parseOpts","round2","startOf","minUnit","capacity","interval","time","timestamps","majorUnit","map2","setMajorTicks","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","determineUnitForAutoTicks","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","ticksFromTimestamps","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","sorter","prevSource","nextSource","prevTarget","nextTarget","span","TimeScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","LinearScale","LogarithmicScale","RadialLinearScale","TimeSeriesScale","canvasID","chart_name","all_charts","canvasID2","chart_type","chart_data","chart_options","destroy","Htmlcomponent","justpyComponents","html_component","ChartJS"],"mappings":"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"}