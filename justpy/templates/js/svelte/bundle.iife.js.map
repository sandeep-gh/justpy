{"version":3,"file":"bundle.iife.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Dummy.svelte","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../src/Chart.svelte","../src/Switch.svelte","../src/Htmlcomponents.svelte","../src/App.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n  export let props;\n  console.log(\"a dummy component\");\n</script>\n<span> I am such a dummy</span>\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<script>\n  export let jp_props;\n  import { onMount, beforeUpdate } from \"svelte\";\n  import { Chart, registerables } from 'chart.js';\n  Chart.register(...registerables);\n  let all_charts = {};\n   onMount(() => {\n     console.log(\"in Chart.onMount\");\n     console.log(\"props = \");\n     console.log(jp_props);\n\n     let canvasID = jp_props.canvas_id;\n     var ctx = document.getElementById(canvasID).getContext('2d');\n     console.log(\"ctx for chart\");\n     console.log(ctx)\n     console.log(\"----------------\")\n\n     // var chart = new Chart(ctx,\n     //                       {\n     //                         type: 'line',\n     //                         data: {\n     //                           labels: [1500,1600,1700,1750,1800,1850,1900,1950,1999,2050],\n     //                           datasets: [{ \n     //                             data: [86,114,106,106,107,111,133,221,783,2478],\n     //                             label: \"Africa\",\n     //                             borderColor: \"#3e95cd\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [282,350,411,502,635,809,947,1402,3700,5267],\n     //                             label: \"Asia\",\n     //                             borderColor: \"#8e5ea2\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [168,170,178,190,203,276,408,547,675,734],\n     //                             label: \"Europe\",\n     //                             borderColor: \"#3cba9f\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [40,20,10,16,24,38,74,167,508,784],\n     //                             label: \"Latin America\",\n     //                             borderColor: \"#e8c3b9\",\n     //                             fill: false\n     //                           }, { \n     //                             data: [6,3,2,2,7,26,82,172,312,433],\n     //                             label: \"North America\",\n     //                             borderColor: \"#c45850\",\n     //                             fill: false\n     //                           }\n     //                                     ]\n     //                         },\n     //                         options: {\n     //                           title: {\n     //                             display: true,\n     //                             text: 'World population per region (in millions)'\n     //                           }\n     //                         }\n     //                       }\n     //                      );\n     \n     var chart = new Chart(ctx, {\n       type: jp_props.chart_type,\n       data: jp_props.chart_data,\n       options: jp_props.chart_options\n     });\n     all_charts[jp_props.chart_name] = chart;\n   }\n          );\n  beforeUpdate(()=>{\n    if (all_charts[jp_props.chart_name] == null){\n      \n    }\n    else{\n      console.log(\"destroy and recreate chart\");\n      all_charts[jp_props.chart_name].destroy();\n      let canvasID = jp_props.canvas_id;\n      let ctx = document.getElementById(canvasID).getContext('2d');\n      var chart = new Chart(ctx, {\n        type: jp_props.chart_type,\n        data: jp_props.chart_data,\n        options: jp_props.chart_options\n      });\n      all_charts[jp_props.chart_name] = chart;\n      \n    }\n    \n  });\n</script>\n\n<!-- unable to fix width and height for 0px -->\n<!-- <canvas id={canvasID} class={jp_props.classes} style={jp_props.style} width={jp_props.width} height={jp_props.height}/> -->\n\n<canvas id={jp_props.canvas_id} class={jp_props.classes} style={jp_props.style}/>\n\n\n\n\n","\n\n<style>\n  .switch {\n    @apply relative inline-block align-middle cursor-pointer select-none bg-transparent;\n  }\n\n  .track {\n    @apply w-12 h-6 bg-gray-600 rounded-full shadow-inner;\n  }\n\n  .thumb {\n    @apply transition-all duration-300 ease-in-out absolute top-0 left-0 w-6 h-6 bg-white border-2 border-gray-600 rounded-full;\n  }\n\n  input[type='checkbox']:checked ~ .thumb {\n    @apply transform translate-x-full border-green-500;\n  }\n\n  input[type='checkbox']:checked ~ .track {\n    @apply transform transition-colors bg-green-500;\n  }\n\n  input[type='checkbox']:disabled ~ .track {\n    @apply bg-gray-500;\n  }\n\n  input[type='checkbox']:disabled ~ .thumb {\n    @apply bg-gray-100 border-gray-500;\n  }\n\n  input[type='checkbox']:focus + .track,\n  input[type='checkbox']:active + .track {\n    @apply shadow-inner;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n\n  export let id = '';\n  export let text = '';\n  export let checked = false;\n  export let disabled = false;\n  onMount(() => {\n    console.log(\"in Switch.onMount\");\n    console.log(\"Switch svelte class is initiated with text\");\n    console.log(text);\n    console.log(\"---------\");\n  }\n         );\n\n  \n</script>\n\n<label for=\"{id}\">\n  <div class=\"switch\">\n    <input\n      {id}\n      name=\"{id}\"\n      type=\"checkbox\"\n      class=\"sr-only\"\n      {disabled}\n      bind:checked\n    />\n    <div class=\"track\"></div>\n    <div class=\"thumb\"></div>\n  </div>\n  <span class=\"ml-2 cursor-pointer\">{text}</span>\n</label>\n","<script>\n  export let jp_props;\n  export let props = {};\n  let self_closing_tags = ['hr', 'input', 'area', 'base', 'br', 'col', 'embed', 'img', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  import Dummy from \"./Dummy.svelte\";\n  import Chart from \"./Chart.svelte\";\n  import Switch from './Switch.svelte';\n  let components = {\n      'Dummy': Dummy,\n    'ChartJS': Chart,\n    'Switch': Switch,\n    'Dummy': Dummy\n    \n  };\n  //event_handler.js requires props\n  props['jp_props'] = jp_props;\n  \n  $:  description_object = {\n    style: jp_props.style,\n   \n  };\n  // console.log(\"jp_props for \" + jp_props.html_tag);\n  // console.log(jp_props);\n  $: if ('attrs' in jp_props){\n   for (const [key, value] of Object.entries(jp_props.attrs)) {\n     description_object[key] = value;\n     \n  }\n  }\n  console.log(\"------new htmlcomponent-----\");\n  console.log(jp_props.vue_type);\n  console.log(jp_props.classes);\n  console.log(\"-----------\");\n    \n\n  $: if (jp_props.classes) {\n     description_object['class'] = jp_props.classes\n  }\n\n  let is_self_closing = false;\n  if (self_closing_tags.indexOf(jp_props.html_tag) > -1){\n    is_self_closing = true;\n    // console.log(jp_props.html_tag);\n    // console.log(\"is self closing\");\n  }\n      \n  function dummyEventHandle(event){\n    // console.log(\"from dummyEventHandle\");\n  }\n  function clickEventHandle(event) {\n    // console.log(\"in click eh\");\n    eventHandler(props, event, false);\n  }\n  function inputEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  function changeEventHandle(event){\n    eventHandler(props, event, false);\n  }\n  //for events defined in python -- forward them to eventhandler\n  //else use dummyeventhandler\n  let click_eh = dummyEventHandle;\n  let change_eh = dummyEventHandle;\n  let input_eh = dummyEventHandle;  \n\n  for (let i = 0; i < jp_props.events.length; i++) {\n    switch(jp_props.events[i]) {\n    case \"before\":\n      console.log(\"before event not implemented\");\n      break;\n    case \"input\":\n      input_eh = inputEventHandle;\n      break;\n    case \"change\":\n      change_eh = changeEventHandle;\n      break;\n    case \"click\":\n      click_eh = clickEventHandle;\n    }\n    \n  }\n</script>\n\n{#if jp_props.vue_type === \"html_component\"}\n  <!-- svelte's syntax for input differs from other html components -->\n{#if is_self_closing}\n  <!-- <input  {...description_object} on:input={input_eh} on:change={change_eh}> -->\n<svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}></svelte:element>\n{:else}\n  <svelte:element this={jp_props.html_tag} {...description_object} on:click={click_eh} on:change={change_eh}>\n    {#if jp_props.text}\n      {jp_props.text}\n    {/if}\n    \n    {#each jp_props.object_props as cobj_props}\n      {#if cobj_props.show}\n        <svelte:self jp_props={cobj_props}/>\n      {/if}\n    {/each}\n\n      </svelte:element>\n    {/if}\n\n{:else}\n  <!-- if component is not a html component; svelte syntax differs for html vs svelte component  -->\n  <svelte:component this={components[jp_props.vue_type]}  {...description_object} jp_props={jp_props}/>\n{/if}\n","<script>\n  export let name;\n  export let justpyComponents;\n\n  var btncolor = \"bg-green-200/50\";\n  function on_click(event){\n    console.log(\"on click called\");\n    btncolor = \"bg-pink-200/50\";\n  }\n\n  import Htmlcomponent from './Htmlcomponents.svelte';\n  import Dummy from \"./Dummy.svelte\";\n  import Chart from \"./Chart.svelte\";\n  import Switch from './Switch.svelte';\n  let uno = false;\n  let dummy_props = {};\n  let selected_component = Htmlcomponent;\n  let components = {'html_component': Htmlcomponent,\n                    'Dummy': Dummy,\n                    'ChartJS': Chart,\n                    'Switch': Switch\n                    \n                   };\n  console.log(\"the justpyComponents\");\n  console.log(JSON.stringify(justpyComponents));\n</script>\n<!-- <div class=\"bg-pink-100\"> -->\n<!--   Things -->\n<!--   </div> -->\n<!-- <main class=\"text-center py-12 max-w-xs mx-auto sm:max-w-none\"> -->\n<!--   <h1 class=\"text-red-400 text-6xl uppercase leading-loose font-thin\">Hello {name}!</h1> -->\n<!--   <p class=\"text-stone-700 mt-4\"> -->\n<!--     Visit the <a class=\"text-sky-600 hover:underline\" href=\"https://svelte.dev/tutorial\"> -->\n<!--     Svelte tutorial</a> to learn how to build Svelte apps. -->\n<!--   </p> -->\n<!--   <button class={btncolor} on:click={on_click}> -->\n<!--     clickme -->\n<!--     </button> -->\n  <!-- </main> -->\n<!-- <div class=\"flex justify-between mt-5\"> -->\n<!--   <Switch bind:checked=\"{uno}\" id=\"uno\" text=\"uno\" /> -->\n<!-- </div> -->\n  \n{#each justpyComponents as jpcomp}\n  {#if jpcomp.vue_type === \"html_component\"}\n    <svelte:component this={Htmlcomponent} jp_props={jpcomp}/>\n  {:else}\n    <svelte:component this={components[jpcomp.vue_type]} jp_props={jpcomp} />\n  {/if}\n  \n  \n{/each}\n\n\n\n"],"names":["tar","src","k","fn","Object","create","fns","forEach","run","thing","a","b","current_component","is_hydrating","low","high","key","value","mid","target","node","hydrate_init","children2","childNodes","nodeName","myChildren","i","length","claim_order","push","m","Int32Array","p","longest","current","seqLen","upper_bound","idx","newLen","Math","max","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","removeChild","iterations","detaching","d","name","document","createElement","data","createTextNode","text","event","handler","options","addEventListener","removeEventListener","attribute","removeAttribute","getAttribute","setAttribute","attributes","descriptors2","getOwnPropertyDescriptors","__proto__","style","cssText","set","element2","Array","from","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","resultNode","replacement","splice","create_element","claim_node","remove","v","claim_element_base","element","nodeType","dataStr","startsWith","splitText","claim_text","text2","wholeText","component","Error","$$","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","seen_callbacks","Set","flushidx","saved_component","pop","callback2","has","add","clear","fragment","update","before_update","dirty","ctx","after_update","add_render_callback","outroing","outros","r","c","block","local","delete","detach2","o","levels","updates","update2","to_null_out","accounted_for","$$scope","n","parent_nodes","l","customElement","on_destroy","new_on_destroy","map","filter","is_function","then","flush","fill","instance2","create_fragment2","not_equal","props","append_styles","parent_component","noop","bound","blank_object","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","children","detach","intro","[object Object]","this","$destroy","type","index2","indexOf","$$props","obj","$$set","keys","log","requestAnimFrame","window","requestAnimationFrame","thisArg","updateFn","updateArgs","args2","prototype","slice","call","ticking","args","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isArray","toString","isNumberFinite","Number","isFinite","defaultValue","toDimension","dimension","endsWith","parseFloat","loopable","len","isObject","a0","a1","ilen","v0","v1","datasetIndex","index","source","clone$1","klen","isValidKey","tval","sval","sources","merger","_merger","merge","_mergerIf","hasOwnProperty","pos","indexOfDotOrLength","str","charAt","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNaN","x","y","epsilon","abs","array","property","min","degrees","radians","e","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","pt1","pt2","sameAngleIsFullCircle","_normalizeAngle","s","angleToStart","angleToEnd","startToAngle","endToAngle","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","lim","h","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","alpha","HUE_RE","w","rgb","hsl2rgbn","hueValue","n2b","calln","exec","p2b","hue","p1","p2","hwb2rgbn","hwb2rgb","hsv2rgbn","hsv2rgb","hsl2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","unpacked","tkeys","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","ratio","tmp","rgb2hsl","proto","assign","input","clone","rgbParse","hueParse","Color","fromObject","nameParse","functionParse","_rgb","_valid","b2n","hexString","n2p","hslString","color2","weight","c1","c2","w2","w1","rgb1","rgb2","interpolate","val","deg","isPatternOrGradient","index_esm","saturate","darken","overrides","descriptors","split","scope","values","getScope$1","defaults","_descriptors2","animation","backgroundColor","borderColor","color","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","valueOrDefault","_scriptable","_indexable","_fallback","gc","string","textWidth","measureText","width","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","_measureText","restore","gcLen","pixel","currentDevicePixelRatio","halfWidth","canvas","getContext","resetTransform","clearRect","height","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","point","area","margin","left","right","top","bottom","clip","previous","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","opts","lines","strokeWidth","strokeColor","line","translation","isNullOrUndef","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","matches","match","objProps","read","prop","_readValueToProps","toTRBL","fallback","warn","toLineHeight","toFontString","inputs","info","cacheable","parentContext","table","cmp","hi","lo","_lookupByKey","_lookup","_rlookupByKey","arrayEvents","listener","stub","_chartjs","listeners","items","set2","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","_createResolver","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","_descriptors","setContext","_attachContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","defaults2","scriptable","indexable","_allKeys","_capitalize","constructor","resolve2","getScope","parent","resolveObjectKey","parentScopes","parentFallback","resolveFallback","allScopes","addScopesFromKey","subGetTarget","addScopes","resolveKeysFromAllScopes","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","firstPoint","middlePoint","afterPoint","next","d01","distanceBetweenPoints","d12","s01","s12","fa","fb","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","delta","iPixel","vPixel","pt","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","splineCurve","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isPointInArea","capControlPoint","domNode","host","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","styles","suffix","result","evt","borderBox","boxSizing","paddings","getPositionedStyle","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","aspectRatio","margins","parseMaxStyle","maxHeight","containerSize","container","_getParentNode","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","el","getPropertyValue","getStyle","cp1","cp2","_pointInLine","intlCache","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","between","_angleBetween","compare","_angleDiff","normalize","_isBetween","segment","bounds","startBound","endBound","propertyFn","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","normalizeSegment","segments","sub","_boundSegment","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","st","dir","createContext","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","anims","date","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw2","_active","_total","tick","draw","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","_duration","cancel","interpolators","boolean","from2","to2","factor","c0","valid","mix","number","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","_animateOptions","Animation","allowedOverflow","filterVisible","metasets","_getSortedDatasetMetas","stack","dsIndex","singleMode","otherValue","stacked","stacks","stackKey","indexValue","subStack","vScale","positive","getMatchingVisibleMetas","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","getOrCreateStack","_top","getLastIndexInStack","_bottom","scales2","shift","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","isStacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","getFirstScaleId","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","applyStack","getSortedDatasetIndices","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","scaleClip","defaultClip","getMaxOverflow","elements2","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names2","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","Animations","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","_cache","$bar","visibleMetas","concat","getAllParsedValues","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","custom","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","inflateAmount","DatasetController","parseArrayOrPrimitive","iAxisKey","vAxisKey","isFloatBar","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","_getStacks","pixels","barThickness","computeMinSampleSize","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","super","tooltip","title","innerRadius","outerRadius","getter","i2","toRadians","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","formatNumber","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","animationsDisabled","pointCount","_limitValue","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","isNumber","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","DoughnutController","_fullLoop","pointPosition","getPointPositionForValue","LineController","controllers","BarController","BubbleController","PolarAreaController","PieController","RadarController","ScatterController","abstract","timestamp","amount","unit","weekday","members","DateAdapter","adapters","_date","metaset","lookupMethod","_reversePixels","getRange","position","getSortedVisibleDatasetMetas","binarySearch","useFinalPosition","isPointInArea","inRange","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","inRange2","getCenterPoint","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","rangeMethod","intersectsItem","Interaction","evaluateInteractionItems","modes","getRelativePosition","getIntersectItems","getNearestItems","getAxisItems","STATIC_POSITIONS","layouts2","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","maxPadding","boxPadding","getPadding","newWidth","outerWidth","getCombinedMax","newHeight","outerHeight","widthChanged","heightChanged","same","other","positions2","marginForPositions","boxes","refitBoxes","refit","getMargins","updateDims","fitBoxes","userPadding","padding","autoPadding","layouts","_layers","z","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","sortByWeight","filterByPosition","centerHorizontal","filterDynamicPositionByAxis","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","setLayoutDims","change","updatePos","BasePlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","nodeList","contains","observer","MutationObserver","trigger","entries","nodeListContains","addedNodes","removedNodes","observe","childList","subtree","drpListeningCharts","oldDevicePixelRatio","dpr","throttled","ResizeObserver","contentRect","onWindowResize","disconnect","native","fromNativeEvent","renderHeight","renderWidth","displayWidth","readUsedSize","displayHeight","proxies","$proxies","attach","createAttachObserver","createDetachObserver","createResizeObserver","createProxyAndListen","releaseObserver","removeListener","getMaximumSize","isConnected","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","numItems","increment","offsetGridLines","validIndex2","lineValue","toFont","reverseAlign","Element","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","finiteOrDefault","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","sample","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","getTickMarkLength","getTitleHeight","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","_alignPixel","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","getPixelForGridLine","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","titleAlign","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","Scale","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","registry","TypedRegistry","_typedRegistries","_each","_get","typedRegistry","reg","_getRegistryForType","arg","isForType","_exec","itemReg","registry2","camelMethod","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","plugins2","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","datasetDefaults","scaleOptions","chartDefaults","configScales","chartIndexAxis","getIndexAxis","firstIDs","scaleConf","console","error","determineAxis","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","getAxisFromDefaultScaleID","defaultID","mergeScaleConfig","keyCache","keysCached","generate","addIfFound","_config","initData","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","cachedKeys","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","l1","l2","animationOptions2","onComplete","onProgress","_isDomSupported","getElementById","instances","getChart","getCanvas","intKey","userConfig","Config","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","BasicPlatform","DomPlatform","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","PluginService","_hiddenIndices","attached","_doResize","timeout","setTimeout","debounce","resizeDelay","listen","onAnimationsComplete","onAnimationProgress","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","retinaScale","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","positionIsHorizontal","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","compare2Level","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener2","_remove","detached","isAttached","activeElements","lastActive","_elementsEqual","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","each","Chart","pixelMargin","angleMargin","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","theta","innerR","spacingOffset","alpha2","avNogSpacingRadius","angleOffset","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","rThetaToXY","p4","p8","inner","lineJoin","fullCircles","version","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","lineCap","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathVars","lineMethod","stepped","_steppedLineTo","_bezierCurveTo","getLineMethod","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","fastPathSegment","pathSegment","usePath2D","Path2D","path","_path","segmentMethod","_getSegmentMethod","_points","_segments","_pointsUpdated","findStartAndEnd","splitByStyles","solidSegments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_getInterpolationMethod","interpolated","hitRadius","mouseX","mouseY","inRange$1","hoverRadius","bar","half","skip2","getBarBounds","maxW","maxH","skipOrLimit","parseBorderWidth","toTRBLCorners","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","refRect","boundingRects","addRectPath","addRoundedRectPath","addNormalRectPath","inflateRect","ArcElement","LineElement","PointElement","BarElement","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","__spreadProps","minMaxDecimation","boundary","linePoints","_findSegmentEnd","_pointsFromSegments","propagate","fill2","visited","fillOption","parseFillOption","firstCh","decodeTargetIndex","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","_createBoundaryLine","_buildStackLine","_getTargetValue","simpleArc","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipY","lineLoop","tpoints","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","notShape","targetLoop","interpolatedPoint","_args","_decodeFill","$filler","_resolveTarget","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","getRtlAdapter","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","Legend","adjustHitBoxes","handleEvent","ci","_padding","textSize","fontOpts","_drawArgs","plugin_title","Title","titleBlock","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","toPush","String","getLabelAndValue","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineYAlign","determineXAlign","alignment","paddingAndSize","alignX","alignY","pushOrConcat","splitNewlines","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","getBeforeAfterBodyLines","bodyItems","scoped","overrideCallbacks","beforeLabel","afterLabel","beforeFooter","afterFooter","createTooltipItem","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","getTooltipSize","positionAndSize","determineAlignment","backgroundPoint","getBackgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","getAlignedX","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","Tooltip","_willRender","labelCount","Decimation","Filler","SubTitle","addedLabels","addIfString","lastIndexOf","_startValue","_valueRange","_addedLabels","added","validIndex","findOrAddLabel","getDecimalForPixel","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","niceNum","rounded","almostWhole","decimalPlaces","_decimalPlaces","relativeLabelSize","CategoryScale","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","generateTicks$1","_maxDigits","LinearScaleBase","handleTickRangeOptions","tickVal","_zero","exp","endExp","endSignificand","significand","isMajor","lastTick","generateTicks","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","determineLimits","setCenterPoint","_pointLabelItems","extra","getTickBackdropHeight","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","gridLineOpts","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","adapter","_adapter","parser","isoWeekday","_parseOpts","round2","startOf","minUnit","capacity","interval","time","timestamps","majorUnit","map2","setMajorTicks","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","determineUnitForAutoTicks","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","ticksFromTimestamps","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","sorter","prevSource","nextSource","prevTarget","nextTarget","span","TimeScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","LinearScale","LogarithmicScale","RadialLinearScale","TimeSeriesScale","canvas_id","classes","ctx2","jp_props","all_charts","canvasID","chart_type","chart_data","chart_options","chart_name","destroy","checked","vue_type","spread_props","html_tag","object_props","components","Dummy","ChartJS","Switch","is_self_closing","click_eh","dummyEventHandle","change_eh","changeEventHandle","clickEventHandle","description_object","attrs","Htmlcomponent","justpyComponents","html_component"],"mappings":"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"}